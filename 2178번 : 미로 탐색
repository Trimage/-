#include <iostream>
#include <vector>
#include <queue>

using namespace std;

int dx[] = { 0,0,1,-1 };
int dy[] = { 1,-1,0,0 };

void read(vector<vector<char>>& arr, vector<vector<int>>& cnt) {
	int row, col;

	cin >> row >> col;

	arr.resize(row, vector<char>(col));
	cnt.resize(row, vector<int>(col,0));

	for (int i = 0;i < row;i++) {
		for (int j = 0;j < col;j++) {
			cin >> arr[i][j];
		}
	}
}

void bfs(int row, int col, const vector<vector<char>>& arr, vector<vector<int>>& cnt) {
	queue<pair<int, int>> Q;
	
	cnt[row][col] = 1;
	
	Q.push(make_pair(row, col));

	while (!Q.empty()) {
		int x, y;
		y = Q.front().first;
		x = Q.front().second;
		Q.pop();

		for (int i = 0;i < 4;i++) {
			int ay, ax;
			ay = y + dy[i];
			ax = x + dx[i];

			if (ay < arr.size() && ay >= 0 && ax < arr[ay].size() && ax >= 0 && arr[ay][ax] == '1' && cnt[ay][ax]==0) {
				Q.push(make_pair(ay, ax));
				cnt[ay][ax] = cnt[y][x] + 1;
			}
		}
	}
}

int main() {
	
	vector<vector<char>> arr;		//미로 지도를 저장
	vector<vector<int>> cnt;		//미로 내 최소 방문할 칸 수를 저장

	read(arr,cnt);		//미로 지도를 저장

	bfs(0, 0, arr, cnt);	//미로 내 최소의 칸 수를 구함

	cout << cnt[arr.size() - 1][arr[arr.size() - 1].size() - 1];	//도착위치에 최소의 칸 수를 출력
	
	return 0; 
}
