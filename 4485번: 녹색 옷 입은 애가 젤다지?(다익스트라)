#include <iostream>
#include <vector>
#include <queue>

#define INF 9876543
using namespace std;


int dy[] = {0, 0, -1, 1};
int dx[] = {1, -1, 0, 0};


void bfs(int n, vector<vector<int>>& arr, vector<vector<int>>& visit) {
	n--;
	
	priority_queue<pair<int, pair<int,int>>> pq;
	visit[0][0] = arr[0][0];
	pq.push(make_pair(-arr[0][0], make_pair(0,0)));
	
	while(!pq.empty()){
		int cnt = -pq.top().first;
		int y = pq.top().second.first;
		int x = pq.top().second.second;
		pq.pop();
		
		for(int i=0; i<4; i++) {
			int ay = y + dy[i];
			int ax = x + dx[i];
			
			if(ay <0 || ay > n || ax < 0 || ax > n) continue;
			int ncnt = cnt + arr[ay][ax];
			
			if(ncnt >= visit[ay][ax]) continue;
			visit[ay][ax] = ncnt;
			pq.push(make_pair(-ncnt, make_pair(ay,ax)));
		}
	}
}


int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);
	
	int n=0;
	int num=0;
	while(1) {
		cin >> n;
		
		if(n==0) break;
		
		num++;
		
		vector<vector<int>> arr(n, vector<int>(n));
		vector<vector<int>> visit(n, vector<int>(n, INF));
		
		for(int i=0;i<n;i++){
			for(int j=0;j<n;j++){
				cin >> arr[i][j];
			}
		}
		
		bfs(n, arr, visit);
		cout << "Problem " << num << ": " << visit[n-1][n-1] << '\n';
	}
		
	
	return 0;
}
