/*

/*
첫번째 시도 DP
DP문제인 줄 알고 DP로 해결하려했으나 효율성(시간초과 및 메모리초과)부분에서 실패함

top-down형식으로 해결 시도
P1 = 1로 설정
1) Pn = P(n/2)  (n%2==0)
   Pn = P(n/2) + 1  (n%2==1)
   
*/

#include <vector>
using namespace std;

vector<int> DP;

int solve(int n)
{
    if(DP[n]==0) {
        DP[n]=solve(n/2);
        if(n%2==1) DP[n]++;
    }
    return DP[n];
}


int solution(int n)
{
    DP.resize(n+1,0);
    DP[1]=1;
    
    solve(n);
    return DP[n];
    
 }

*/




/* 
두번째 시도 탐욕법
첫번째 DP로 시도하였을 때 하나하나 DP를 호출하면서 시간초과 및 메모리초과가 발생한다고 판단함
탐욕법으로 해결 시도한 결과 성공

answer는 1로 설정 (최소값이 1임)

1) n%2==1 인경우 answer++
2) n/2;
3) n이 1이 아닐때 까지 1,2번 반복
*/

#include <iostream>
using namespace std;

int solution(int n)
{
    int answer=1;
    
    while(n!=1) {
        if(n%2==1) answer++;
        n/=2;
    }

    return answer;
}
