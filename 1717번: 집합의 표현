#include <iostream>
#include <vector>

using namespace std;

int get_parent(int n, vector<int>& parent) {
	if(parent[n] == n) return n;
	
	return parent[n] = get_parent(parent[n], parent);
}

void union_parent(int a, int b, vector<int>& parent) {
	a = get_parent(a, parent);
	b = get_parent(b, parent);
	
	if(a < b) parent[b] = a;
	else parent[a] = b;
}

bool same_parent(int a, int b, vector<int>& parent) {
    a = get_parent(a, parent);
    b = get_parent(b, parent);
			
	if(a == b) return true;
    else return false;
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    
	int n, m;
	cin >> n >> m;
	
	vector<int> parent(n+1);
	
	for(int i=0;i<=n;i++)
		parent[i]= i;
	
	
	int order, a, b;
	for(int i=0;i<m;i++) {
		cin >> order >> a >> b;
		
		if(order == 0) union_parent(a,b,parent);
		else {
            bool check = same_parent(a, b, parent);
            if(check) cout << "YES\n";
			else cout << "NO\n";
        }
	}
	
	return 0;
}
