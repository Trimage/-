#include <string>
#include <vector>

using namespace std;

int solution(int m, int n, vector<string> board) {
    vector<vector<bool>> check(m, vector<bool>(n, false));

    int answer = 0;

    while (1) {
        for (int i = 1;i < m - 1;i++) {
            for (int j = 1;j < n - 1;j++) {
                if (board[i][j] != ' ') {
                    if (board[i][j] == board[i - 1][j - 1] && board[i][j] == board[i - 1][j] && board[i][j] == board[i][j - 1]) check[i][j] = check[i - 1][j - 1] = check[i - 1][j] = check[i][j - 1] = true;
                    if (board[i][j] == board[i - 1][j + 1] && board[i][j] == board[i - 1][j] && board[i][j] == board[i][j + 1]) check[i][j] = check[i - 1][j + 1] = check[i - 1][j] = check[i][j + 1] = true;
                    if (board[i][j] == board[i + 1][j - 1] && board[i][j] == board[i][j - 1] && board[i][j] == board[i + 1][j]) check[i][j] = check[i + 1][j - 1] = check[i][j - 1] = check[i + 1][j] = true;
                    if (board[i][j] == board[i + 1][j + 1] && board[i][j] == board[i][j + 1] && board[i][j] == board[i + 1][j]) check[i][j] = check[i + 1][j + 1] = check[i][j + 1] = check[i + 1][j] = true;
                }
            }
        }

        int cnt = 0;
        for (int i = 0;i < m;i++) {
            for (int j = 0;j < n;j++) {
                if (check[i][j]) cnt++;
            }
        }

        if (cnt == 0)break;
        answer += cnt;

        for (int i = m - 1;i >= 0;i--) {
            for (int j = 0;j < n;j++) {
                if (check[i][j] || board[i][j]==' ') {
                    board[i][j] = ' ';
                    for (int k = i - 1;k >= 0;k--) {
                        if (!check[k][j] && board[k][j] != ' ') {
                            board[i][j] = board[k][j];
                            board[k][j] = ' ';
                            break;
                        }
                    }
                }
            }
        }

        for (int i = 0;i < m;i++)
            fill(check[i].begin(), check[i].end(), false);

    }

    return answer;
}
