#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>

using namespace std;

/* 위상 정렬 문제 */ 

int main() {
	ios::sync_with_stdio(false);
    cin.tie(NULL);
		
    int n;
    cin >> n;
    
    vector<int> arr(n+1);
    vector<vector<int>> edge(n+1);
    vector<int> degrees(n+1,0);
    
    for(int i=1;i<=n;i++) {
        cin >> arr[i];
        
        int m;
		cin >> m;
        for(int j=0;j<m;j++) {
			int a;
			cin >> a;
			
            edge[a].push_back(i);
            degrees[i]++;
        }
    }
    
    queue<int> q;
    vector<int> answer(n+1, 0);
    for(int i=1;i<=n;i++) {
        if(degrees[i] == 0) {
            q.push(i);
            answer[i] = 0;
        }
    }
	
    while(!q.empty()) {
        int num = q.front();
        q.pop();
        
        answer[num] += arr[num];
        
        for(int i=0;i<edge[num].size();i++){
            int tmp = edge[num][i];
            answer[tmp] = answer[tmp] < answer[num] ? answer[num] : answer[tmp];
            if(--degrees[tmp] == 0) q.push(tmp);
        }
    }
    
    cout << *max_element(answer.begin(), answer.end());
    
    return 0;
}
