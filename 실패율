#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

bool cmp(const pair<double, int> &a, const pair<double, int> &b) {
    if (a.first == b.first) return a.second < b.second;
    return a.first > b.first;
}

vector<int> solution(int N, vector<int> stages) {
    vector<int>answer;
    vector<pair<double, int>> tmp;
    double fail_rate;
    int ncnt, sumcnt = 0; // 스테이지 도달 &클리어 X , cnt누적

    sort(stages.begin(), stages.end());

    for (int i = 1;i <= N;i++) {
        ncnt = 0;
        for (int j = 0;j < stages.size();j++) {
            if (stages[j] == i) ncnt++;
            else if (stages[j] > i) break;
        }
        fail_rate = (double)ncnt / (double)(stages.size() - sumcnt);
        if(ncnt==0) fail_rate=0;
        sumcnt += ncnt;


        tmp.push_back(pair<double,int>(fail_rate, i));
    }

    sort(tmp.begin(), tmp.end(),cmp);

    for(int i=0;i<N;i++) {
        answer.push_back(tmp[i].second);
    }
    return answer;
}
